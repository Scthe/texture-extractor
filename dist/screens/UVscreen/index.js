import{css as j,cx as R}from"../../../snowpack/pkg/@emotion/css.js";import{useEffect as h,useImperativeHandle as C,useRef as i}from"../../../snowpack/pkg/preact/hooks.js";import{h as r}from"../../../snowpack/pkg/preact.js";import{forwardRef as O}from"../../../snowpack/pkg/preact/compat.js";import{destroyGlContext as T,initializeGlView as b}from"../../gl.js";import{useLatest as d}from"../../hooks/useLatest.js";import{hexAsSvgColor as f}from"../../utils/index.js";import{ZoomNumber as E}from"../../components/ZoomNumber.js";import{ScreenName as Z}from"../../components/ScreenName.js";import{SettingsOpenButton as y}from"../../components/SettingsOpenButton.js";import{usePinchScaleChange as L}from"../../hooks/usePinchScaleChange.js";import{useSettingsOpenState as U}from"../../hooks/useSettingsOpenState.js";import{useAutoZoomPinchZoom as P}from"../../hooks/useAutoZoomPinchZoom.js";import{useAppStatePartial as z}from"../../state/AppState.js";import*as t from"../../style.js";import{UvSettings as _}from"./UvSettings.js";import{getRectToDraw as A,redrawUVview as H}from"./utils.js";const V=f(t.COLORS.greyDark),I=f(t.COLORS.greyMid),N=["Use Texture Extractor to map parts of input image (right side of the screen) to rectangles (left side of the screen).","Use the Extracted Texture view to preview the selection area content. This view contains image generated from input image based on active selection. Live updates provide feedback during changes.","Use settings panel in bottom right corner of this view to save the result as a file."],B=j`
  border-right: 4px solid ${t.ThemeTeal.primary};
  background: url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2 2"><rect width="2" height="2" fill="${V}"/><path d="M1 2V0h1v1H0v1z" fill="${I}"/></svg>');
  background-size: auto;
  background-size: 20px 20px;
`;export const UVscreen=O((G,S)=>{const{image:o,borderSafeSpace:c,rectangles:v,renderSmooth:n,selectedRectangleId:m}=z("borderSafeSpace","image","rectangles","renderSmooth","selectedRectangleId"),a=i(),p=i(),[w,l]=U(),g=d({borderSafeSpace:c,rectangles:v,renderSmooth:n,selectedRectangleId:m}),s=d(e=>{e=A(e,g.current.rectangles,g.current.selectedRectangleId),H(p.current,e,{borderSafeSpace:c,renderSmooth:n,start:{x:0,y:0},clear:!0})});C(S,()=>({redrawWebGl:e=>s.current(e)})),h(()=>{s.current(void 0)},[s,n,m]),h(()=>{if(a.current==null||o==null)return;const e=p.current=b(a.current,o.data);return s.current(void 0),()=>{e&&T(e)}},[o,s]);const[x,k]=L(),u=i();return P(o,u),r("div",{class:R(t.theme(t.ThemeTeal),t.appColumnStyle,B)},r("pinch-zoom",{ref:u,class:t.pinchZoomStyle,onChange:k},o!=null?r("canvas",{ref:a,width:o.data.width,height:o.data.height}):null),r(E,{zoom:x}),r(Z,{theme:t.ThemeTeal,name:"Extracted Texture",helpText:N}),r(y,{setSettingsOpen:l}),r(_,{isOpen:w,setSettingsOpen:l}))});
