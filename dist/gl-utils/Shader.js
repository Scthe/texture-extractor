import m from"./gimme_gl.js";var a;(function(e){e[e.VertexShader=m.VERTEX_SHADER]="VertexShader",e[e.FragmentShader=m.FRAGMENT_SHADER]="FragmentShader"})(a||(a={}));const h=(e,t)=>{const i=/\d+:(\d+):(.*)$/,o=e.split(`
`);return t.split(`
`).map(r=>{const n=i.exec(r);if(n&&n.length===3){const c=parseInt(n[1],10)-1;return`> ${o[c].trim()}
  L${c}: ${n[2].trim()}`}else return r})},d=(e,t,i)=>{const o=e.createShader(t);if(e.shaderSource(o,i),e.compileShader(o),e.getShaderParameter(o,e.COMPILE_STATUS))return o;{console.error(`${a[t]} compile error:`);const r=e.getShaderInfoLog(o)||"";h(i,r).forEach(n=>{n=n.trim(),n.length>0&&console.log(`%c${n}`,"color: #FA5858")}),e.deleteShader(o);return}},I=(e,t)=>{const i=e.getProgramParameter(t.glId,e.ACTIVE_ATTRIBUTES),o={};for(let s=0;s<i;s++){const r=e.getActiveAttrib(t.glId,s);o[r.name]={size:r.size,name:r.name,type:r.type,location:e.getAttribLocation(t.glId,r.name)}}return o},u=(e,t)=>{const i=e.getProgramParameter(t.glId,e.ACTIVE_UNIFORMS),o={};for(let s=0;s<i;s++){const r=e.getActiveUniform(t.glId,s),n=r.name.replace("[0]","");o[r.name]={size:r.size,name:r.name,type:r.type,location:e.getUniformLocation(t.glId,n)}}return o};export class Shader{constructor(t,i,o){this.attrs={},this.uniforms={},this.glId_=t.createProgram();const s=d(t,a.VertexShader,i),r=d(t,a.FragmentShader,o);if(!s||!r){this.destroy(t);return}t.attachShader(this.glId,s),t.attachShader(this.glId,r),t.linkProgram(this.glId),t.deleteShader(s),t.deleteShader(r),t.getProgramParameter(this.glId,t.LINK_STATUS)?(this.attrs=I(t,this),this.uniforms=u(t,this)):this.destroy(t)}use(t){t.useProgram(this.glId)}getAttr(t){return this.attrs[t]}getUniform(t){return this.uniforms[t]}destroy(t){t.deleteProgram(this.glId),this.glId_=null}get glId(){if(this.glId_==null)throw new Error("Tried to use deleted shader");return this.glId_}}
