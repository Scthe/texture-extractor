import{abortable as m}from"./index.js";async function h(t){const e=new Image;e.decoding="async",e.src=t;const n=new Promise((o,c)=>{e.onload=()=>o(),e.onerror=()=>c(Error("Image loading error"))});return e.decode&&await e.decode().catch(()=>null),await n,e}async function u(t){const e=URL.createObjectURL(t);try{return await h(e)}finally{URL.revokeObjectURL(e)}}function r(t){return"displayWidth"in t?t.displayWidth:t.width}function s(t){return"displayHeight"in t?t.displayHeight:t.height}function f(t){const e=r(t),n=s(t),o=0,c=0,d=r(t),g=s(t),i=document.createElement("canvas");i.width=e,i.height=n;const a=i.getContext("2d");if(!a)throw new Error("Could not create canvas context");return a.drawImage(t,o,c,d,g,0,0,e,n),a.getImageData(0,0,e,n)}export async function decodeImage(t,e){const n=await m(t,"createImageBitmap"in self?createImageBitmap(e):u(e));return f(n)}
