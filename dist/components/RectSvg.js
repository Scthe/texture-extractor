import f from"../../snowpack/pkg/lodash.clonedeep.js";import{css as P}from"../../snowpack/pkg/@emotion/css.js";import{useCallback as i,useEffect as I,useState as $}from"../../snowpack/pkg/preact/hooks.js";import{h as d,Fragment as b}from"../../snowpack/pkg/preact.js";import{useLatest as D}from"../hooks/useLatest.js";import{useAppStatePartial as M}from"../state/AppState.js";import{add2d as E,ensurePointInsideImage as G,mul2d as L,svgPolygonPoints as x}from"../utils/index.js";import{RectCornerSvg as F}from"./RectCornerSvg.js";import{RectGridSvg as T}from"./RectGridSvg.js";import{RectArrowSvg as q}from"./RectArrowSvg.js";const k=(o,s,{scale:c,imageData:n,borderSafeSpace:a})=>{const l=E(o,L(s,1/c));return G(l,n,a),l},R=(o,s,c)=>{const n=f(o.rect.points);return n[s]=k(o.rect.points[s],c,o),n},g=(o,s)=>o.rect.points.map(c=>k(c,s,o));export const RectSvg=({rect:o,scale:s,imageData:c,onDragEnd:n,onDragging:a})=>{const{borderSafeSpace:l,selectedRectangleId:v}=M("borderSafeSpace","selectedRectangleId"),[p,S]=$(f(o.points));I(()=>{S(f(o.points))},[o.points]);const t=D({imageData:c,rect:o,scale:s,borderSafeSpace:l}),j=i((e,r)=>{const u=R(t.current,e,r);S(u),a(t.current.rect.id,u)},[t,a]),h=i((e,r)=>{const u=R(t.current,e,r);n(t.current.rect.id,u)},[t,n]),y=i(e=>{const r=g(t.current,e);S(r),a(t.current.rect.id,r)},[t,a]),A=i(e=>{const r=g(t.current,e);n(t.current.rect.id,r)},[t,n]),m=i(e=>e/t.current.scale,[t]),w=o.id===v,C=P`
    pointer-events: none;
    stroke-dasharray: 10;
    stroke: ${o.color};
    fill: ${w?`${o.color}20`:"none"};
    stroke-width: ${Math.min(m(10),7)};
  `;return d(b,null,d("polygon",{points:x(p[0],p[1],p[3],p[2]),class:C}),w?d(T,{rect:p,color:o.color,scaleIndependent:m}):null,d(q,{rect:p,color:o.color,onDrag:y,onDragEnd:A,scaleIndependent:m}),p.map((e,r)=>d(F,{key:r,idx:r,point:e,color:o.color,scaleIndependent:m,onDrag:j,onDragEnd:h,maxRadius:l})))};
