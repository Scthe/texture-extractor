import{createWebGl2Context as y}from"./gl-utils/createContext.js";import{Shader as M}from"./gl-utils/Shader.js";import _ from"./shaders/shaderV.js";import g from"./shaders/shaderF.js";import{Texture as N,TextureType as S}from"./gl-utils/texture/Texture.js";import{createSamplerOpts as h,createTextureOpts as E,TextureFilterMag as u,TextureFilterMin as m}from"./gl-utils/texture/TextureOpts.js";import{Sampler as c}from"./gl-utils/texture/Sampler.js";import{clamp as f}from"./utils/index.js";const x=20;export const destroyGlContext=e=>{e.shader.destroy(e.gl),e.imageTexture.destroy(e.gl),e.samplerNearest.destroy(e.gl),e.samplerLinear.destroy(e.gl)};const C=e=>{e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.CULL_FACE),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0)},L=(e,t,r)=>{const s=new N(e,S.Texture2d,[t.width,t.height,0],0,r,E({filterMin:m.Nearest,filterMag:u.Nearest})),o={start:[0,0,0],dimensions:s.dimensions},a={unsizedPixelFormat:e.RGBA,perChannelType:e.UNSIGNED_BYTE,data:t};return s.write(e,0,o,a),s};export const initializeGlView=(e,t)=>{const r=y(e,{alpha:!0,antialias:!1,depth:!0,failIfMajorPerformanceCaveat:!0,powerPreference:"high-performance",stencil:!0},["EXT_color_buffer_float","OES_texture_float_linear"]);C(r);const s=new M(r,_,g);s.use(r);const o=L(r,t,r.RGBA8),a=new c(r,h({filterMin:m.Linear,filterMag:u.Linear})),n=new c(r,h({filterMin:m.Nearest,filterMag:u.Nearest}));return{gl:r,shader:s,imageTexture:o,samplerLinear:a,samplerNearest:n}};const b=({gl:e})=>{const t=2*x*x;e.drawArrays(e.TRIANGLES,0,t*3)};export const getRectDimensions=e=>{const t=Math.abs(e[0].x-e[1].x),r=Math.abs(e[2].x-e[3].x),s=Math.abs(e[0].y-e[2].y),o=Math.abs(e[1].y-e[3].y);return[Math.ceil((t+r)/2),Math.ceil((s+o)/2)]},redraw=(e,t,{isSmooth:r,start:s,clear:o})=>{const{gl:a,shader:n,imageTexture:l}=e;(r?e.samplerLinear:e.samplerNearest).bindAsActive(a),o&&(a.viewport(0,0,l.width,l.height),a.clear(a.COLOR_BUFFER_BIT));const p=getRectDimensions(t);a.viewport(s.x,s.y,p[0],p[1]);const d=t.map(i=>({x:f(i.x/l.width,0,1),y:f(i.y/l.height,0,1)})),T=d.map(i=>i.x),w=d.map(i=>i.y);a.uniform4fv(n.getUniform("u_uv_X").location,T),a.uniform4fv(n.getUniform("u_uv_Y").location,w),b(e)};
