function p(a,t,e){const i=Array.from(a);let s;if(t==="")return s=i.filter(r=>r.kind==="file"),e?s:[s[0]];const o=t.toLowerCase().split(",").map(r=>r.split("/").map(l=>l.trim())).filter(r=>r.length===2);return s=s=i.filter(r=>{if(r.kind!=="file")return!1;const[l,f]=r.type.toLowerCase().split("/").map(d=>d.trim());for(const[d,h]of o)if(l===d&&(h==="*"||f===h))return!0;return!1}),e===!1&&(s=[s[0]]),s}function c(a,t,e){const i=[];return p(a.items,t,e).forEach(s=>{const o=s.getAsFile();o!==null&&i.push(o)}),i}class n extends Event{constructor(t,e){var i,s;super(t,e),(i=this)instanceof(s=n)||Object.setPrototypeOf(i,s.prototype),this._files=e.files,this._action=e.action}get action(){return this._action}get files(){return this._files}}class u extends HTMLElement{constructor(){super(),this._dragEnterCount=0,this._onDragEnter=this._onDragEnter.bind(this),this._onDragLeave=this._onDragLeave.bind(this),this._onDrop=this._onDrop.bind(this),this._onPaste=this._onPaste.bind(this),this.addEventListener("dragover",t=>t.preventDefault()),this.addEventListener("drop",this._onDrop),this.addEventListener("dragenter",this._onDragEnter),this.addEventListener("dragend",()=>this._reset()),this.addEventListener("dragleave",this._onDragLeave),this.addEventListener("paste",this._onPaste)}get accept(){return this.getAttribute("accept")||""}set accept(t){this.setAttribute("accept",t)}get multiple(){return this.getAttribute("multiple")}set multiple(t){this.setAttribute("multiple",t||"")}_onDragEnter(t){if(this._dragEnterCount+=1,this._dragEnterCount>1)return;if(t.dataTransfer===null)return void this.classList.add("drop-invalid");const e=p(t.dataTransfer.items,this.accept,this.multiple!==null);this.classList.add(!t.dataTransfer||!t.dataTransfer.items.length||e[0]!==void 0?"drop-valid":"drop-invalid")}_onDragLeave(){this._dragEnterCount-=1,this._dragEnterCount===0&&this._reset()}_onDrop(t){if(t.preventDefault(),t.dataTransfer===null)return;this._reset();const e=c(t.dataTransfer,this.accept,this.multiple!==null);e!==void 0&&this.dispatchEvent(new n("filedrop",{action:"drop",files:e}))}_onPaste(t){if(!t.clipboardData)return;const e=c(t.clipboardData,this.accept,this.multiple!==void 0);e!==void 0&&this.dispatchEvent(new n("filedrop",{action:"paste",files:e}))}_reset(){this._dragEnterCount=0,this.classList.remove("drop-valid"),this.classList.remove("drop-invalid")}}customElements.define("file-drop",u);export{u as FileDropElement,n as FileDropEvent};
